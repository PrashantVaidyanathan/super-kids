/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package superkidsapplication.panels;

import com.ece.superkids.enums.QuestionCategory;
import com.ece.superkids.enums.QuestionLevel;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFrame;
import superkidsapplication.controllers.PanelController;
import superkidsapplication.controllers.QuestionController;

/**
 *
 * @author Prashant & Baris
 */
public class QuestionPanel extends javax.swing.JPanel {

    /**
     * Creates new form QuestionPanel
     */
    public int a;
    //points to which choice is correct
    private int correctAnswer;
    private QuestionController qBase;
    private PanelController controller;
    private QuestionCategory category;
    private QuestionLevel level;
    private JFrame result;

    //when creating the panel set which choice is the correct answer
    //1 is button1 , 2 is button2 and so on.
    //look at design tab to see which button is which
    public QuestionPanel(int correctAnswer, QuestionLevel level, QuestionCategory category) {
        this.category = category;
        this.correctAnswer = correctAnswer;
        this.level = level;
        qBase = QuestionController.getInstance();
        controller = PanelController.getInstance();
        initComponents();
        //initally next button is not visible becomes visible if the question is answered correctly
        nextQButton.setVisible(false);
        a = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice1Button = new javax.swing.JButton();
        choice2Button = new javax.swing.JButton();
        choice3Button = new javax.swing.JButton();
        choice4Button = new javax.swing.JButton();
        characterIconLabel = new javax.swing.JLabel();
        questionLabel = new javax.swing.JLabel();
        scoreNumLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        superKidNameLabel = new javax.swing.JLabel();
        nextQButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));

        choice1Button.setText("Choice 1");
        choice1Button.setPreferredSize(new java.awt.Dimension(150, 150));
        choice1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choice1ButtonActionPerformed(evt);
            }
        });

        choice2Button.setText("Choice 2");
        choice2Button.setPreferredSize(new java.awt.Dimension(150, 150));
        choice2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choice2ButtonActionPerformed(evt);
            }
        });

        choice3Button.setText("Choice 3");
        choice3Button.setPreferredSize(new java.awt.Dimension(150, 150));
        choice3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choice3ButtonActionPerformed(evt);
            }
        });

        choice4Button.setText("Choice 4");
        choice4Button.setPreferredSize(new java.awt.Dimension(150, 150));
        choice4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choice4ButtonActionPerformed(evt);
            }
        });

        characterIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/characters/Boy.png"))); // NOI18N

        questionLabel.setText("Question Comes Here");

        scoreNumLabel.setText("00");

        scoreLabel.setText("Score");

        superKidNameLabel.setText("Super Kid: John Doe");

        nextQButton.setBackground(new java.awt.Color(153, 0, 0));
        nextQButton.setForeground(new java.awt.Color(255, 255, 255));
        nextQButton.setText("NEXT QUESTION");
        nextQButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(scoreLabel)
                        .addGap(18, 18, 18)
                        .addComponent(scoreNumLabel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(characterIconLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(choice2Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(choice1Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(171, 171, 171)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(choice4Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(choice3Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(nextQButton)
                                .addGap(27, 27, 27))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(superKidNameLabel)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scoreNumLabel)
                            .addComponent(scoreLabel))
                        .addGap(168, 168, 168)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choice1Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choice3Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(superKidNameLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(characterIconLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(choice2Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choice4Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextQButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void choice1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choice1ButtonActionPerformed
        // TODO add your handling code here:
        if (correctAnswer == 1) {
            correctAnswerClicked();
        } else {
            wrongAnswerClicked(choice1Button);
        }
    }//GEN-LAST:event_choice1ButtonActionPerformed

    private void choice3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choice3ButtonActionPerformed
        if (correctAnswer == 3) {
            correctAnswerClicked();
        } else {
            wrongAnswerClicked(choice3Button);
        }
    }//GEN-LAST:event_choice3ButtonActionPerformed

    private void choice2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choice2ButtonActionPerformed
        if (correctAnswer == 2) {
            correctAnswerClicked();
        } else {
            wrongAnswerClicked(choice2Button);
        }
    }//GEN-LAST:event_choice2ButtonActionPerformed

    private void choice4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choice4ButtonActionPerformed
        if (correctAnswer == 4) {
            correctAnswerClicked();
        } else {
            wrongAnswerClicked(choice4Button);
        }
    }//GEN-LAST:event_choice4ButtonActionPerformed

    //if NEXT button is clicked go to next question
    private void nextQButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQButtonActionPerformed
        try {
            // TODO add your handling code here:
            //if the button is clicked when it says "pick a new category" then go to subject menu
            if (nextQButton.getText().equals("PICK A NEW CATEGORY")) {
                controller.goToSubjectMenu();
                return; //return this function
            }
            //// here when a question is answered correctly we get a new question panel and add to frame
            //set result frame to invisible if no more questions
            if (result != null) {
                result.setVisible(false);
            }
            //get te next question
            QuestionPanel qP = qBase.createQuestionPanel(level, category);
            //if the returned questionPanel is not null then add to frame through the controller
            if (qP != null) {
                controller.addPanel(qP);
                //if returned questionpanel is null then there are no more 
            } else {
                nextQButton.setText("PICK A NEW CATEGORY");


                //say "no more questions"//ONLY WORKS IN MAC
                if (System.getProperty("os.name").contains("OS X")) {
                    try {
                        //say the question (only works in MAC)
                        Runtime.getRuntime().exec(new String[]{"say", "no more questions"});
                    } catch (IOException ex) {
                        Logger.getLogger(QuestionPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(QuestionPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nextQButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel characterIconLabel;
    private javax.swing.JButton choice1Button;
    private javax.swing.JButton choice2Button;
    private javax.swing.JButton choice3Button;
    private javax.swing.JButton choice4Button;
    private javax.swing.JButton nextQButton;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel scoreNumLabel;
    private javax.swing.JLabel superKidNameLabel;
    // End of variables declaration//GEN-END:variables

    //set the question and the choices
    //they can have a text or an icon (image)
    //if no icon is wanted then pass an empty list into icon parameter
    public void setQuestion(String qText, Icon icon) throws IOException {
        questionLabel.setIcon(icon);
        questionLabel.setText(qText);

        if (System.getProperty("os.name").contains("OS X")) {
            //say the question (only works in MAC)
            Runtime.getRuntime().exec(new String[]{"say", qText});
        }
    }

    //set text and/or icons for buttons
    public void setChoices(List<String> choices, List<Icon> icons) {

        if (icons != null) {
            choice1Button.setIcon(icons.get(0));
            choice2Button.setIcon(icons.get(1));
            choice3Button.setIcon(icons.get(2));
            choice4Button.setIcon(icons.get(3));
        }

        if (choices != null) {
            choice1Button.setText(choices.get(0));
            choice2Button.setText(choices.get(1));
            choice3Button.setText(choices.get(2));
            choice4Button.setText(choices.get(3));
        }
    }

    //when the correct answer is clicked this method is called from the button action
    private void correctAnswerClicked() {
        if (result != null) {
            result.setVisible(false);
        }
        result = new CorrectAnswerFrame();
        result.setVisible(true);
        choice1Button.setEnabled(false);
        choice2Button.setEnabled(false);
        choice3Button.setEnabled(false);
        choice4Button.setEnabled(false);
        //update score
        if (a < 4) {
            a++;
        }

        if (a == 1) {
            scoreNumLabel.setText("10");
        } else if (a == 2) {
            scoreNumLabel.setText("7");
        } else if (a == 3) {
            scoreNumLabel.setText("5");
        } else if (a == 4) {
            scoreNumLabel.setText("3");
        }

        nextQButton.setVisible(true);
    }

    //when the wrong answer is selected
    private void wrongAnswerClicked(JButton button) {
        button.setEnabled(false);
        if (result != null) {
            result.setVisible(false);
        }
        result = new WrongAnswerFrame();
        result.setVisible(true);
        //update score 
        if (a < 4) {
            a++;
        }
    }
}
