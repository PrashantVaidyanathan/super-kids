/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package superkidsapplication.panels;

import com.ece.superkids.images.ImageManager;
import com.ece.superkids.questions.QuestionDatabaseFactory;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.File;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import superkidsapplication.controllers.PanelController;
import superkidsapplication.providers.ImageProvider;
import superkidsapplication.providers.ResourceProviderFactory;

/**
 *
 * @author baris
 */
public class QuestionPicturePanel extends javax.swing.JPanel {

    /**
     * Creates new form QuestionPicturePanel
     */
    String customPicturePath;
    JTextField field;
    ImageManager iManager = QuestionDatabaseFactory.anImageManager();
    ImageProvider iProvider = ResourceProviderFactory.anImageProvider();
    JPanel scrollable = new JPanel(new GridLayout(0, 5, 5, 10));
    PanelController pControl = PanelController.getInstance();

    public QuestionPicturePanel(JTextField field) {
        this.field = field;
        initComponents();
        loadPictures();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        addButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));

        addButton.setText("Add New");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Pick a picture, or add a new one from your computer.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1))
                    .add(layout.createSequentialGroup()
                        .add(296, 296, 296)
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(doneButton)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(233, 233, 233)
                .add(jLabel1)
                .addContainerGap(233, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(doneButton)
                    .add(addButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /*
     * Add a new picture to the list
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        openBrowser();
    }//GEN-LAST:event_addButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        pControl.goBackOnePanel();

    }//GEN-LAST:event_doneButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * Open browser to pick a new picture
     */
    private void openBrowser() {
        JFileChooser c = new JFileChooser();
        String filename;
        String dir;
        // Demonstrate "Open" dialog:
        int rVal = c.showOpenDialog(this);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            filename = (c.getSelectedFile().getName());
            dir = (c.getCurrentDirectory().toString());
            customPicturePath = dir + File.separator + filename;
            System.out.println("New picture added to custom pics:" + customPicturePath);
            String key = getKey(filename);
            System.out.println(key);
            iManager.saveImage(customPicturePath, key);
            loadPictures(); //reload pictures
        }
    }

    /**
     * load pictures to the panel
     */
    private void loadPictures() {
        iProvider.refresh();
        scrollable.removeAll();
        scrollable.revalidate();
        scrollable.repaint();
        List keys = iProvider.getAllKeys();
        for (int i = 0; i < keys.size(); i++) {
            JLabel label;
            JButton button = new JButton();
           // String key = (String) keys.get(i);
            String key = "deer";
            label = new JLabel(iProvider.getImage(key));
            button.add(label);
            button.setName(key);
            button.addActionListener(new ButtonAction(field));
            button.addFocusListener(new ButtonFocus());
            scrollable.add(button);
        }
        jScrollPane1.add(scrollable);
        jScrollPane1.setViewportView(scrollable);
    }

    private String getKey(String filename) {
        int dot = 0;
        for (int i = 0; i < filename.length(); i++) {
            if (filename.charAt(i) == '.') {
                dot = i;
            }
        }
        return filename.substring(0, dot);
    }
}

class ButtonAction implements ActionListener {

    JTextField field;

    public ButtonAction(JTextField field) {
        this.field = field;
    }

    public void actionPerformed(ActionEvent e) {
        JButton source = (JButton) e.getSource();
        field.setText(source.getName());
    }
}

class ButtonFocus implements FocusListener {

    public void focusGained(FocusEvent e) {
        JButton source = (JButton) e.getSource();
        source.setBackground(Color.RED);
    }

    public void focusLost(FocusEvent e) {
        JButton source = (JButton) e.getSource();
        source.setBackground(Color.white);
    }
}
